name: Build Desktop App

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch: # Allow manual triggers

jobs:
  build-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: ubuntu-self-hosted
            os: ubuntu
          - platform: macos-latest
            os: macos
          - platform: windows-latest
            os: windows

    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Install dependencies (Ubuntu only)
      if: matrix.os == 'ubuntu'
      run: |
        echo "Installing/verifying Tauri dependencies for Ubuntu..."

        # Always ensure dependencies are installed, even on self-hosted
        if command -v apt-get >/dev/null 2>&1; then
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.1-dev libayatana-appindicator3-dev librsvg2-dev
        fi

        # Verify critical dependencies
        echo "Verifying dependencies..."
        pkg-config --exists gtk+-3.0 || echo "WARNING: GTK+3 not found"
        pkg-config --exists webkit2gtk-4.1 || echo "WARNING: WebKit2GTK not found"

        echo "Rust toolchain:"
        rustc --version
        cargo --version

    - name: Install dependencies
      run: npm install --legacy-peer-deps

    - name: Debug build environment (Ubuntu only)
      if: matrix.os == 'ubuntu'
      run: |
        echo "=== Build Environment Debug ==="
        echo "Working directory: $(pwd)"
        echo "Node version: $(node --version)"
        echo "npm version: $(npm --version)"
        echo "Rust version: $(rustc --version)"
        echo "Cargo version: $(cargo --version)"
        echo ""
        echo "=== Project structure ==="
        ls -la
        echo ""
        echo "=== src-tauri directory ==="
        ls -la src-tauri/ || echo "src-tauri directory not found"
        echo ""
        echo "=== Tauri dependencies ==="
        cd src-tauri && cargo tree --depth 1 || echo "Could not check Cargo dependencies"

    - name: Build Tauri app
      uses: tauri-apps/tauri-action@v0.5
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        RUST_LOG: tauri=debug
      with:
        projectPath: src-tauri
        tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version
        releaseName: 'Happy Desktop v__VERSION__'
        releaseBody: 'See the assets to download this version and install.'
        releaseDraft: true
        prerelease: false
        includeDebug: false

# Email notifications disabled - will be handled agentically
    # - name: Notify Build Complete
    #   if: always()
    #   uses: fjogeleit/http-request-action@v1
    #   with:
    #     url: 'https://api.postmarkapp.com/email'
    #     method: 'POST'
    #     customHeaders: |
    #       {
    #         "Accept": "application/json",
    #         "Content-Type": "application/json",
    #         "X-Postmark-Server-Token": "${{ secrets.POSTMARK_SERVER_TOKEN }}"
    #       }
    #     data: |
    #       {
    #         "From": "hello@blueroots.io",
    #         "To": "jefferson@heimdallstrategy.com",
    #         "Subject": "ðŸŽ‰ Happy Desktop Build ${{ job.status }} - ${{ matrix.os }}",
    #         "HtmlBody": "<h2>Happy Desktop Build Completed!</h2><p><strong>Status:</strong> ${{ job.status }}</p><p><strong>Platform:</strong> ${{ matrix.os }}</p><p><strong>Run:</strong> <a href=\"${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\">View Details</a></p><p>Build artifacts should be available in the draft release.</p>",
    #         "TextBody": "Happy Desktop build completed!\n\nStatus: ${{ job.status }}\nPlatform: ${{ matrix.os }}\nRun: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}\n\nBuild artifacts should be available in the draft release."
    #       }