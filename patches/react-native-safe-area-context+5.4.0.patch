diff --git a/node_modules/react-native-safe-area-context/ios/Fabric/RNCSafeAreaProviderComponentView.mm b/node_modules/react-native-safe-area-context/ios/Fabric/RNCSafeAreaProviderComponentView.mm
index d16aea4..58c1a86 100644
--- a/node_modules/react-native-safe-area-context/ios/Fabric/RNCSafeAreaProviderComponentView.mm
+++ b/node_modules/react-native-safe-area-context/ios/Fabric/RNCSafeAreaProviderComponentView.mm
@@ -64,6 +64,14 @@ - (void)invalidateSafeAreaInsets
   }
 
   UIEdgeInsets safeAreaInsets = self.safeAreaInsets;
+  
+  // Check if iPad app running on macOS
+  if (@available(iOS 14.0, *)) {
+    if ([NSProcessInfo processInfo].isiOSAppOnMac) {
+      safeAreaInsets.top = 0;
+    }
+  }
+  
   CGRect frame = [self convertRect:self.bounds toView:RNCParentViewController(self).view];
 
   if (_initialInsetsSent &&
diff --git a/node_modules/react-native-safe-area-context/ios/Fabric/RNCSafeAreaViewComponentView.mm b/node_modules/react-native-safe-area-context/ios/Fabric/RNCSafeAreaViewComponentView.mm
index 827fa4d..a0145ee 100644
--- a/node_modules/react-native-safe-area-context/ios/Fabric/RNCSafeAreaViewComponentView.mm
+++ b/node_modules/react-native-safe-area-context/ios/Fabric/RNCSafeAreaViewComponentView.mm
@@ -99,6 +99,13 @@ - (void)updateStateIfNecessary
 #if TARGET_OS_IPHONE
   UIEdgeInsets safeAreaInsets = _providerView.safeAreaInsets;
 
+  // Check if iPad app running on macOS
+  if (@available(iOS 14.0, *)) {
+    if ([NSProcessInfo processInfo].isiOSAppOnMac) {
+      safeAreaInsets.top = 0;
+    }
+  }
+
   if (UIEdgeInsetsEqualToEdgeInsetsWithThreshold(safeAreaInsets, _currentSafeAreaInsets, 1.0 / RCTScreenScale())) {
     return;
   }
diff --git a/node_modules/react-native-safe-area-context/ios/RNCSafeAreaContext.mm b/node_modules/react-native-safe-area-context/ios/RNCSafeAreaContext.mm
index 08fe267..2d3733c 100644
--- a/node_modules/react-native-safe-area-context/ios/RNCSafeAreaContext.mm
+++ b/node_modules/react-native-safe-area-context/ios/RNCSafeAreaContext.mm
@@ -48,6 +48,13 @@ - (NSDictionary *)getConstants
 
 #if TARGET_OS_IPHONE
     UIEdgeInsets safeAreaInsets = window.safeAreaInsets;
+    
+    // Check if iPad app running on macOS
+    if (@available(iOS 14.0, *)) {
+      if ([NSProcessInfo processInfo].isiOSAppOnMac) {
+        safeAreaInsets.top = 0;
+      }
+    }
 #elif TARGET_OS_OSX
     NSEdgeInsets safeAreaInsets = NSEdgeInsetsZero;
 #endif
diff --git a/node_modules/react-native-safe-area-context/ios/RNCSafeAreaProvider.m b/node_modules/react-native-safe-area-context/ios/RNCSafeAreaProvider.m
index b5b7bef..809a632 100644
--- a/node_modules/react-native-safe-area-context/ios/RNCSafeAreaProvider.m
+++ b/node_modules/react-native-safe-area-context/ios/RNCSafeAreaProvider.m
@@ -63,6 +63,13 @@ - (void)invalidateSafeAreaInsets
 
 #if TARGET_OS_IPHONE
   UIEdgeInsets safeAreaInsets = self.safeAreaInsets;
+  
+  // Check if iPad app running on macOS
+  if (@available(iOS 14.0, *)) {
+    if ([NSProcessInfo processInfo].isiOSAppOnMac) {
+      safeAreaInsets.top = 0;
+    }
+  }
 #elif TARGET_OS_OSX
   NSEdgeInsets safeAreaInsets;
   if (@available(macOS 11.0, *)) {
